[package]
name = "composefs-oci"
version = "0.1.0"
edition = "2021"
resolver = "2"

[dependencies]
anyhow = "1.0"
bincode = { version = "1.3.3" }
containers-image-proxy = { version = "0.7" }
composefs = { version = "0.1.1", features = ["v1_0_4"] }
cap-std-ext = "4.0"
camino = "1"
clap = { version= "4.2", features = ["derive"] }
fn-error-context = "0.2.0"
ocidir = { version = "0.3" }
openssl = "0.10.33"
rustix = { version = "0.38.34", features = ["fs", "process", "thread"] }
libc = "0.2"
percent-encoding = "2"
serde = "1"
tar = "0.4.38"
tokio = { features = ["io-std", "time", "process", "rt", "net"], version = ">= 1.13.0" }
tokio-util = { features = ["io-util"], version = "0.7" }
tokio-stream = { features = ["sync"], version = "0.1.8" }
tracing = "0.1"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
hex = "0.4.3"
serde_json = "1.0.117"
comfy-table = "7.1.1"
chrono = "0.4.38"
indicatif = "0.17.8"

[dev-dependencies]
similar-asserts = {version = "1", features = ["serde"] }
tempfile = "3"

[[bin]]
path = "src/bin/main.rs"
name = "composefs-oci"

[profile.dev]
opt-level = 1 # No optimizations are too slow for us.

[profile.release]
lto = "thin"
# No need to support unwinding
panic = "abort"
# We assume we're being delivered via e.g. RPM which supports split debuginfo
debug = true

[profile.releaselto]
codegen-units = 1
inherits = "release"
lto = "yes"

[lints.rust]
# Require an extra opt-in for unsafe
unsafe_code = "deny"
# Absolutely must handle errors
unused_must_use = "forbid"

[lints.clippy]
# These should only be in local code
dbg_macro = "deny"
todo = "deny"
# These two are in my experience the lints which are most likely
# to trigger, and among the least valuable to fix.
needless_borrow = "allow"
needless_borrows_for_generic_args = "allow"
